copdata <- rio::import(here::here("data", "Spetses_clean2_2024.rds"), trust = T)
# Check if age overall follows a normal distribution:
shapiro.test(copdata$age)
# Can simply have a look at
hist(copdata$age)
# Looking only at the students:
students <- copdata %>%
filter(group == "student")
hist(students$age)
# Perform Wilcoxon rank sum test on age and sex:
wilcox.test(age ~ case,
data = copdata)
copdata %>%
select(sex, case) %>%
tbl_summary(by = case) %>%
add_p()
copdata %>%
select(class, case) %>%
tbl_summary(by = case) %>%
add_p()
copdata %>%
select(group, case) %>%
tbl_summary(by = case) %>%
add_p()
copdata %>%
select(group, case) %>%
tbl_summary(by = case) %>%
add_p()
copdata %>%
select(sex, class, group, case) %>%
tbl_summary(by = case) %>%
add_p()
copdata %>%
select(sex, class, group, case) %>%
tbl_summary(by = case) %>%
add_p()
# You could use the EpiStats package for each food item
CS(copdata, "case", "feta")
CS(copdata, "case", "sardines")
CS(copdata, "case", "eggplant")
CS(copdata, "case", "pasta")
rr_tbl <- CSTable(copdata, "case", food_vars) %>%
as.data.frame() %>%
rownames_to_column() %>%
flextable() %>%
set_header_labels(
values = c("Food Item",
"Total exposed",
"Cases exposed",
"AR among exposed",
"Total unexposed",
"Cases unexposed",
"AR among unexposed",
"RR",
"95% lower CI",
"95% upper CI",
"p-value"))
# You can save time (and probably typos!) by creating a vector for food variables...
food_vars <- c("feta", "sardines", "eggplant", "pasta",
"veal", "tomsal", "dessert", "bread",
"champagne", "beer", "redwine", "whitewine")
# ...and using EpiStats::CSTable() to run all variables together!
CSTable(copdata, "case", food_vars)
rr_tbl <- CSTable(copdata, "case", food_vars) %>%
as.data.frame() %>%
rownames_to_column() %>%
flextable() %>%
set_header_labels(
values = c("Food Item",
"Total exposed",
"Cases exposed",
"AR among exposed",
"Total unexposed",
"Cases unexposed",
"AR among unexposed",
"RR",
"95% lower CI",
"95% upper CI",
"p-value"))
rr_tbl
epitools::riskratio(copdata$pastaD,
copdata$case,
conf.level = 0.95)
# Let's get the results directly exponentiated
binom_pastaD_exp <- glm(case ~ pastaD, data = copdata,
family = binomial(link = "log")) %>%
tidy(exponentiate = TRUE,
conf.int = TRUE)
binom_pastaD_exp
epitools::riskratio(copdata$champagneD,
copdata$case,
conf.level = 0.95)
# Let's get the results directly exponentiated
binom_champagneD_exp <- glm(case ~ champagneD, data = copdata,
family = binomial(link = "log")) %>%
tidy(exponentiate = TRUE,
conf.int = TRUE)
binom_champagneD_exp
# Check if the 'pacman' package is installed, if not install it:
if (!requireNamespace("pacman", quietly = TRUE)) install.packages("pacman")
# Load the required libraries into the current R session:
pacman::p_load(rio,
here,
skimr,
plyr,
janitor,
lubridate,
gtsummary,
flextable,
officer,
epikit,
apyramid,
scales,
tidyverse
)
# Import the raw data set:
copdata <- import(here::here("data", "spetses_school.csv"))
copdata <- copdata %>% rename(temp = veal,)
copdata <- copdata %>% rename(temp = veal, tempD = vealD)
copdata <- copdata %>% rename(veal = temp, vealD = tempD)
copdata <- copdata %>%
dplyr::rename(veal = temp, vealD = tempD)
copdata <- copdata %>%
dplyr::rename(temp = veal,
tempD = vealD)
copdata <- copdata %>%
dplyr::rename(veal = pasta,
vealD = pastaD)
copdata <- copdata %>%
dplyr::rename(pasta = temp,
pastaD = tempD)
export(copdata, "data/spetses_school.csv")
# Load the required libraries into the current R session:
pacman::p_load(rio,
here,
tidyverse,
skimr,
plyr,
janitor,
lubridate,
gtsummary,
flextable,
officer,
epikit,
apyramid,
scales,
EpiStats,
broom)
# Load the required libraries into the current R session:
pacman::p_load(rio,
here,
tidyverse,
skimr,
plyr,
janitor,
lubridate,
gtsummary,
flextable,
officer,
epikit,
apyramid,
scales,
EpiStats,
broom)
# Import the raw data set:
copdata <- rio::import(here::here("data", "Spetses_clean2_2024.rds"), trust = T)
# Check if age overall follows a normal distribution:
shapiro.test(copdata$age)
# Can simply have a look at
hist(copdata$age)
# Looking only at the students:
students <- copdata %>%
filter(group == "student")
hist(students$age)
# Perform Wilcoxon rank sum test on age and sex:
wilcox.test(age ~ case,
data = copdata)
copdata %>%
select(sex, case) %>%
tbl_summary(by = case) %>%
add_p()
# You could use the EpiStats package for each food item
CS(copdata, "case", "feta")
CS(copdata, "case", "sardines")
CS(copdata, "case", "eggplant")
CS(copdata, "case", "pasta")
# You can save time (and probably typos!) by creating a vector for food variables...
food_vars <- c("feta", "sardines", "eggplant", "pasta",
"veal", "tomsal", "dessert", "bread",
"champagne", "beer", "redwine", "whitewine")
# ...and using EpiStats::CSTable() to run all variables together!
CSTable(copdata, "case", food_vars)
rr_tbl <- CSTable(copdata, "case", food_vars) %>%
as.data.frame() %>%
rownames_to_column() %>%
flextable() %>%
set_header_labels(
values = c("Food Item",
"Total exposed",
"Cases exposed",
"AR among exposed",
"Total unexposed",
"Cases unexposed",
"AR among unexposed",
"RR",
"95% lower CI",
"95% upper CI",
"p-value"))
rr_tbl
# Let's get the results directly exponentiated
binom_pastaD_exp <- glm(case ~ pastaD, data = copdata,
family = binomial(link = "log")) %>%
tidy(exponentiate = TRUE,
conf.int = TRUE)
binom_pastaD_exp
# Load the required libraries into the current R session:
pacman::p_load(rio,
here,
tidyverse,
skimr,
plyr,
janitor,
lubridate,
gtsummary,
flextable,
officer,
epikit,
apyramid,
scales,
EpiStats)
# Import the raw data set:
copdata <- rio::import(here::here("data", "Spetses_clean2_2024.rds"))
# Import the raw data set:
copdata <- rio::import(here::here("data", "Spetses_clean2_2024.rds"), trust = T)
stratall <- copdata %>%
# Mutate across to convert cases to numeric:
mutate(across(.cols = case,
.fns = ~ as.numeric(.)))
# Pass data to the csinter function:
pastastrata <- csinter(x = stratall,
cases = "case",
exposure = "veal",
by = "pasta")
pastastrata
# Perform Wilcoxon rank sum test on veal and pasta:
wilcox.test(veal ~ pasta,
data = copdata)
# Pass data to the csinter function:
champstrata <- csinter(x = stratall,
cases = "case",
exposure = "champagne",
by = "pasta")
champstrata
pastastrata
csinter(x = stratall,
+                        cases = "case",
csinter(x = stratall, cases = "case",exposure = "pasta",by = "veal")
# Load the required libraries into the current R session:
pacman::p_load(rio,
here,
tidyverse,
skimr,
plyr,
janitor,
lubridate,
gtsummary,
flextable,
officer,
epikit,
apyramid,
scales,
EpiStats,
broom)
# Import the raw data set:
copdata <- import(here::here("data", "spetses_school.csv"))
tabyl(copdata$ill)
View(copdata)
# Check if the 'pacman' package is installed, if not install it:
if (!requireNamespace("pacman", quietly = TRUE)) install.packages("pacman")
# Load the required libraries into the current R session:
pacman::p_load(rio,
here,
skimr,
plyr,
janitor,
lubridate,
gtsummary,
flextable,
officer,
epikit,
apyramid,
scales,
tidyverse
)
knitr::opts_chunk$set(echo = FALSE)
# Check if the 'pacman' package is installed, if not install it:
if (!requireNamespace("pacman", quietly = TRUE)) install.packages("pacman")
# Load required packages with pacman:
pacman::p_load(
here,
rio,
tidyverse
)
thisyear <- as.Date("2025-10-04")
lastyear <- as.Date("2024-10-05")
datechange <- as.Date("2025-10-05")
mydiff <- thisyear - lastyear
mydiff
datechange <- as.Date("2024-10-06")
datechange + days(mydiff)
lastyear <- as.Date("2023-10-07")
mydiff
mydiff <- thisyear - lastyear
mydiff
datechange + days(mydiff)
thisyear <- as.Date("2024-10-05")
datechange
datechange + days(mydiff)
lastyear
thisyear
datechange
mydiff <- thisyear - lastyear
mydiff
datechange + days(mydiff)
datechange <- as.Date("2023-10-08")
datechange + days(mydiff)
thisyear
casedata <- rio::import(here(
"data",
"raw",
"spetses_school.csv"
))
# Check if the 'pacman' package is installed, if not install it:
if (!requireNamespace("pacman", quietly = TRUE)) install.packages("pacman")
# Load required packages with pacman:
pacman::p_load(
here,
rio,
tidyverse
)
casedata <- rio::import(here(
"data",
"raw",
"spetses_school.csv"
))
here()
here::here()
casedata <- rio::import(here::here(
"data",
"raw",
"spetses_school.csv"
))
labdata <- rio::import(here::here(
"data",
"raw",
"Lab data.xlsx"
))
View(casedata)
View(labdata)
pacman::p_load(
here,
rio,
tidyverse
)
casedata <- rio::import(here(
"data",
"raw",
"spetses_school.csv"
))
casedata <- rio::import(here::here(
"data",
"raw",
"spetses_school.csv"
))
labdata <- rio::import(here::here(
"data",
"raw",
"Lab data.xlsx"),
skip = 1
)
View(labdata)
names(casedata)
names(labdata)
casedata <- casedata %>%
# Convert to date format:
mutate(dayonset2 = lubridate::dmy(dayonset)) %>%
# Update symptom onset dates:
mutate(dayonset2 = dayonset + lubridate::days(obdatediff))
knitr::opts_chunk$set(echo = FALSE)
# Set the difference in dates between last year and this year:
obdatediff <- params$this_year_outbreak_date - params$last_year_outbreak_date
thisyear <- lubridate::ymd(params$this_year_outbreak_date)
lastyear <- lubridate::ymd(params$last_year_outbreak_date)
obdatediff <- thisyear - lastyear
# Update dates in case data:
casedata <- casedata %>%
# Convert to date format:
mutate(dayonset2 = lubridate::dmy(dayonset)) %>%
# Update symptom onset dates:
mutate(dayonset2 = dayonset + lubridate::days(obdatediff))
rlang::last_trace()
obdatediff
str(obdatediff)
str(casedata$dayonset)
casedata <- casedata %>%
# Convert to date format:
mutate(dayonset2 = lubridate::dmy(dayonset))
str(casedata$dayonset)
str(casedata$dayonset2)
casedata <- casedata %>%
# Convert to date format:
mutate(dayonset2 = lubridate::dmy(dayonset)) %>%
# Update symptom onset dates:
mutate(dayonset2 = dayonset2 + lubridate::days(obdatediff))
View(casedata)
lastyear
thisyear
knitr::opts_chunk$set(echo = FALSE)
# Convert selected dates to date format:
thisyear <- lubridate::ymd(params$this_year_outbreak_date)
lastyear <- lubridate::ymd(params$last_year_outbreak_date)
# Set the difference in dates between last year and this year:
obdatediff <- thisyear - lastyear
# Update dates in case data:
casedata <- casedata %>%
# Convert to date format:
mutate(dayonset2 = lubridate::dmy(dayonset)) %>%
# Update symptom onset dates:
mutate(dayonset2 = dayonset2 + lubridate::days(obdatediff))
View(casedata)
knit_with_parameters("~/04_PHT/04_Modules/04_IntroCourse/03_Week3_facilitation/IntroCourse_inCop/maintenance/Update_dates.Rmd")
casedata <- rio::import(here::here(
"data",
"raw",
"spetses_school.csv"
))
# Update dates in case data:
casedata <- casedata %>%
# Update symptom onset dates:
mutate(dayonset = lubridate::dmy(dayonset) + lubridate::days(obdatediff))
head(casedata$dayonset)
str(casedata$dayonset)
format(thisyear, "%d%a%Y")
format(thisyear, "%d%m%Y")
format(thisyear, "%d%M%Y")
?strptime
format(thisyear, "%d%b%Y")
str(format(thisyear, "%d%b%Y"))
names(casedata)
install.packages("openxlsx2")
pacman::p_load(
rio,
here,
openxlsx2,
tidyverse
)
labwb <- wb_load(here::here(
"data",
"raw",
"Lab data.xlsx")
)
labdata <- wb_to_df(
labwb,
sheet = 1,
start_row = 2,
col_names = TRUE
)
labdata <- labdata %>%
# Update sample collection dates:
mutate(across(
.cols = contains("date"),
.fns = ~ format(
lubridate::dmy(.x) + lubridate::days(obdatediff), "%d%b%Y"
)
))
View(labdata)
labwb <- labwb %>%
wb_add_data(
sheet = 1,
x = labdata,
start_row = 3,
col_names = FALSE
)
wb_save(labwb, here::here(
"data",
"updated",
"Lab data.xlsx"), overwrite = TRUE)
names(casedata)
knit_with_parameters("~/04_PHT/04_Modules/04_IntroCourse/03_Week3_facilitation/IntroCourse_inCop/maintenance/Update_dates.Rmd")
if (!requireNamespace("pacman", quietly = TRUE)) install.packages("pacman")
# Load required packages with pacman:
pacman::p_load(
here,
tidyverse
)
qmd_files <- list.files(
path = here("scripts"),
pattern = "\\.qmd$",
full.names = FALSE
)
qmd_files
qmd_files <- qmd_files[!qmd_files %in% "index.qmd"]
qmd_files
walk(qmd_files, ~ {
input_file <- here("scripts", .x)
output_file <- here("scripts", str_replace(.x, "\\.qmd$", ".R"))
knitr::purl(
input = input_file,
output = output_file,
documentation = 1
)
})
